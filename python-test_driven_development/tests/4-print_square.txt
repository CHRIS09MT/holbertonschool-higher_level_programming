The ``4-print_square`` module
=============================

Using ``print_square``
---------------------

This module provides the function `print_square` which performs integer addition with type checking.

To use the `print_square` function, you can dynamically import it from the `4-print_square` module as follows:

``print_square`` from the ``4-print_square`` module using dynamic import:

	Test 00: Basic addition
		>>> print_square = __import__('4-print_square').print_square

Now use it:

	Test 01:
	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########


	Test 02:
	>>> print_square(0)
	

	Test 03:
	>>> print_square(-1)
	Traceback (most recent call last):
        ...
	ValueError: size must be >= 0


	Test 04:
	>>> print_square(5.5)
	Traceback (most recent call last):
        ...
	TypeError: size must be an integer


	Test 04:
	>>> print_square('e')
	Traceback (most recent call last):
        ...
	TypeError: size must be an integer


	Test 05:
	>>> print_square(1)
	#


	Test 06:
	>>> print_square()
	Traceback (most recent call last):
        ...
	ValueError: size cannot be None